---

#  - name: copy mongodb from s3
#    s3:
#      bucket="sugarush-us-west-2-{{ lookup('env', 'DEPLOY') }}-archlinux-repository"
#      object="/mongodb-{{ mongodb_version }}-x86_64.pkg.tar.xz"
#      dest="/tmp/mongodb.pkg.tar.xz"
#      mode="get"
#
#  - name: copy boost from s3
#    s3:
#      bucket="sugarush-us-west-2-{{ lookup('env', 'DEPLOY') }}-archlinux-repository"
#      object="/boost-{{ boost_version }}-x86_64.pkg.tar.xz"
#      dest="/tmp/boost.pkg.tar.xz"
#      mode="get"
#
#  - name: copy boost libs from s3
#    s3:
#      bucket="sugarush-us-west-2-{{ lookup('env', 'DEPLOY') }}-archlinux-repository"
#      object="/boost-libs-{{ boost_version }}-x86_64.pkg.tar.xz"
#      dest="/tmp/boost-libs.pkg.tar.xz"
#      mode="get"
#
#  - name: copy wiredtiger libs from s3
#    s3:
#      bucket="sugarush-us-west-2-{{ lookup('env', 'DEPLOY') }}-archlinux-repository"
#      object="/wiredtiger-{{ wiredtiger_version }}-x86_64.pkg.tar.xz"
#      dest="/tmp/wiredtiger.pkg.tar.xz"
#      mode="get"
#
#  - name: install mongodb
#    command: pacman --noconfirm -U /tmp/mongodb.pkg.tar.xz /tmp/boost.pkg.tar.xz #/tmp/boost-libs.pkg.tar.xz /tmp/wiredtiger.pkg.tar.xz

  - name: install mongodb
    pacman:
      name="mongodb"
      state="present"
      update_cache="yes"

  - name: create /data directory
    file:
      path: /data
      state: directory
      owner: mongodb
      mode: 0700

  - name: check for /dev/xvdb xfs file system
    command: /usr/bin/blkid /dev/xvdb -s TYPE -o value
    register: file_system
    ignore_errors: yes

  - name: create xfs file system for /dev/xvdb
    command: /usr/bin/mkfs.xfs -L data /dev/xvdb
    when: file_system.stdout != "xfs"

  - name: create fstab entry for /dev/xvdb
    lineinfile:
      dest: /etc/fstab
      regexp: "^LABEL=data.*"
      line: "LABEL=data /data xfs nobarrier,noatime 0 0"

  - name: mount data volume (/dev/xvdb) to /data
    mount:
      src: LABEL=data
      path: /data
      fstype: xfs

  - name: template service files
    template:
      src: mongo-{{ item }}.service.tpl
      dest: "{{ system }}/mongo-{{ item }}.service"
    with_items: "{{ templates }}"

  - name: create drop-in directories
    file:
      path: "{{ system }}/mongo-{{ item }}.service.d"
      state: directory
    with_items: "{{ templates }}"

  - name: copy limits drop-in
    copy:
      src: 00-limits.conf
      dest: "{{ system }}/mongo-{{ item }}.service.d/00-limits.conf"
    with_items: "{{ templates }}"
    notify:
      - daemon-reload

  - name: copy hugepage drop-in
    copy:
      src="00-hugepage.conf"
      dest="{{ tmpfiles }}/00-hugepage.conf"
    notify:
      - daemon-reload

#  - name: copy mongodb consul service definition
#    template:
#      src="mongodb.service.json.tpl"
#      dest="/etc/consul/agent/mongodb.service.json"
#    notify:
#      - reload consul
