---

  - hosts: tag_Name_dbconfig_{{ cluster }}_{{ lookup('env', 'DEPLOY') }}

    vars:

      port: 27017
      uri: mongodb-mongos-{{ cluster }}.service.consul

      shard_key: "{ _id: 1 }"
      shardsvr_replset: "{{ lookup('env', 'IDENTIFIER') }}-{{ lookup('env', 'DEPLOY') }}-{{ cluster }}-{{ shard }}"
      shardsvr_port: 27018
      shardsvr_group: tag_Name_dbshard_{{ cluster }}_{{ shard }}_{{ lookup('env', 'DEPLOY') }}
      shardsvr_list: >
        {%- for i in range(groups[shardsvr_group]|count) %}
          dbshard-{{ cluster }}-{{ shard }}-{{ i + 1 }}:{{ shardsvr_port }}
          {%- if loop.index != groups[shardsvr_group]|count %},{% endif -%}
        {% endfor -%}

      databases:

        - federal

      collections:

        - federal.bill
        - federal.billstatus

    tasks:

      - name: enable and start mongo-mongos
        service:
          name: mongodb-mongos
          state: started
          enabled: yes

      - name: create shard index for selected collections
        command: >
          {% set database = item.split(".")[0] %}
          {% set collection = item.split(".")[-1] %}
          mongo {{ uri }}:{{ port }}/{{ database }} --eval 'db.{{ collection }}.createIndex({{ shard_key }})'
        with_items: "{{ collections }}"
        run_once: yes

      - name: enable sharding for selected databases
        command: mongo {{ uri }}:{{ port }} --eval 'sh.enableSharding("{{ item }}")'
        with_items: "{{ databases }}"
        run_once: yes

      - name: enable sharding for selected collections
        command: >
          mongo {{ uri }}:{{ port }} --eval 'sh.shardCollection("{{ item }}", {{ shard_key }})'
        with_items: "{{ collections }}"
        run_once: yes

      - name: print shardsvr_list
        debug:
          msg: "{{ shardsvr_list }}"
        run_once: yes

      - name: add shards
        command: >
          mongo {{ uri }}:{{ port }} --eval 'sh.addShard("{{ shardsvr_replset }}/{{ shardsvr_list }}")'
        register: mongo
        run_once: yes

      - name: print output
        debug:
          msg: "{{ mongo.stdout }}"
        run_once: yes
